	1 案例1：配置GRE VPN
本案例要求搭建一个GRE VPN环境，并测试该VPN网络是否能够正常通讯，要求如下：
启用内核模块ip_gre
创建一个虚拟VPN隧道(10.10.10.0/24)
实现两台主机点到点的隧道通讯

   步骤一：启用GRE模块（client和proxy都需要操作）
1）查看计算机当前加载的模块
lsmod			    //显示模块列表
lsmod | grep ip_gre        //确定是否加载了gre模块

2)加载模块ip_gre
modprobe ip_gre 

3）查看模块信息
modinfo ip_gre

   步骤二：Client主机创建VPN隧道
1）创建隧道
ip tunnel add tun0 mode gre remote 201.1.2.5 local 201.1.2.10

//ip tunnel add创建隧道（隧道名称为tun0），ip tunnel help可以查看帮助
//mode设置隧道使用gre模式
//local后面跟本机的IP地址，remote后面是与其他主机建立隧道的对方IP地址

2）启用该隧道（类似与设置网卡up）
ip link show
ip link set tuno up
ip link show

2）为VPN配置隧道IP地址
ip addr add 10.10.10.10/24 peer 10.10.10.5/24 dev tun0
//为隧道tun0设置本地IP地址（10.10.10.10.10/24）
//隧道对面的主机IP的隧道IP为10.10.10.5/24

ip a s         //查看IP地址
3）关闭防火墙

   步骤三：Proxy主机创建VPN隧道
1）查看计算机当前加载的模块

2)加载模块ip_gre

3）创建隧道
ip tunnel add tun0 mode gre remote 201.1.2.10 local 201.1.2.5

//ip tunnel add创建隧道（隧道名称为tun0），ip tunnel help可以查看帮助
//mode设置隧道使用gre模式
//local后面跟本机的IP地址，remote后面是与其他主机建立隧道的对方IP地址

4）启用该隧道（类似与设置网卡up）

5）为VPN配置隧道IP地址
ip addr add 10.10.10.5/24 peer 10.10.10.10/24 dev tun0

//为隧道tun0设置本地IP地址（10.10.10.10.5/24）
//隧道对面的主机IP的隧道IP为10.10.10.10/24

ip a s

6）开启路由转发、关闭防火墙
 echo "1" > /proc/sys/net/ipv4/ip_forward

7)测试连通性
[root@client ~]#  ping 10.10.10.5
[root@proxy ~]#   ping 10.10.10.10

###############################################################################

	2 案例2：创建PPTP VPN
本案例要求搭建一个PPTP VPN环境，并测试该VPN网络是否能够正常通讯，要求如下:
使用PPTP协议创建一个支持身份验证的隧道连接
使用MPPE对数据进行加密
为客户端分配192.168.3.0/24的地址池
客户端连接的用户名为jacob，密码为123456

    步骤一：部署VPN服务器
1）安装软件包（软件包参考lnmp_soft）
[root@proxy ~]# yum localinstall pptpd-1.4.0-2.el7.x86_64.rpm
[root@proxy ~]# rpm -qc pptpd

2)修改配置文件
vim /etc/pptpd.conf
localip 201.1.2.5                                    //服务器本地IP
remoteip 192.168.3.1-50                            //分配给客户端的IP池

 vim /etc/ppp/options.pptpd
require-mppe-128                                    //使用MPPE加密数据
ms-dns 8.8.8.8                                    //DNS服务器

 vim /etc/ppp/chap-secrets            //修改账户配置文件
jacob           *               123456      *
//用户名    服务器标记    密码    客户端

 echo "1" > /proc/sys/net/ipv4/ip_forward    //开启路由转发

3）启动服务
[root@proxy ~]# systemctl start pptpd
[root@proxy ~]# systemctl enable pptpd
[root@proxy ~]# firewall-cmd --set-default-zone=trusted

4）翻墙设置（非必需操作）
[root@proxy ~]# iptables -t nat -A POSTROUTING -s 192.168.3.0/24 \
>  -j SNAT --to-source 201.1.2.5

    步骤二：客户端设置
启动一台Windows虚拟机，将虚拟机网卡桥接到public2，配置IP地址为201.1.2.20。

新建网络连接（具体操作如图-3所示），输入VPN服务器账户与密码（具体操作如图-4所示），连接VPN并测试网络连通性（如图-5所示）。

###############################################################################

	3 案例3：创建L2TP+IPSec VPN
本案例要求搭建一个L2TP+IPSec VPN环境，并测试该VPN网络是否能够正常通讯，具体要求如下：
使用L2TP协议创建一个支持身份验证与加密的隧道连接
使用IPSec对数据进行加密
为客户端分配192.168.3.0/24的地址池
客户端连接的用户名为：jacob，密码为：123456
预共享密钥为：randpass

   步骤一：部署IPSec服务
1）安装软件包
 yum -y install libreswan

2)新建IPSec密钥验证配置文件
cat /etc/ipsec.conf                //仅查看一下该主配置文件

[root@client ~]# vim /etc/ipsec.d/myipsec.conf          

//新建该文件，参考lnmp_soft/vpn/myipsec.conf    

3)创建IPSec预定义共享密钥
[root@client ~]# cat /etc/ipsec.secrets                 //仅查看，不要修改该文件

[root@client ~]# vim /etc/ipsec.d/mypass.secrets        //新建该文件
201.1.2.10   %any:    PSK    "randpass"             //randpass为预共享密钥
                                                //201.1.2.10是VPN服务器的IP

4)启动IPSec服务

systemctl start ipsec   

   步骤二：部署XL2TP服务
1）安装软件包（软件包参考lnmp_soft）
 yum localinstall xl2tpd-1.3.8-2.el7.x86_64.rpm

2) 修改xl2tp配置文件（修改3个配置文件的内容）
[root@client ~]#  vim  /etc/xl2tpd/xl2tpd.conf                //修改主配置文件
[global]
.. ..    
[lns default]
.. ..
ip range = 192.168.3.128-192.168.3.254                    //分配给客户端的IP池
local ip = 201.1.2.10                                    //VPN服务器的IP地址

[root@client ~]# vim /etc/ppp/options.xl2tpd            //认证配置
require-mschap-v2                                         //添加一行，强制要求认证
#crtscts                                                //注释或删除该行
#lock                                                //注释或删除该行


root@client ~]# vim /etc/ppp/chap-secrets                    //修改密码文件
jacob   *       123456  *                //账户名称   服务器标记   密码   客户端IP

3）启动服务
 systemctl start xl2tpd

4）设置路由转发，防火墙
 echo "1" > /proc/sys/net/ipv4/ip_forward

5）翻墙设置（非必需操作）

   步骤二：客户端设置

启动一台Windows虚拟机，将虚拟机网卡桥接到public2，配置IP地址为201.1.2.20。
1. 新建网络连接（参考案例2），输入VPN服务器账户与密码（参考案例2）。
设置VPN连接的属性，预共享密钥是IPSec配置文件中填写的randpass，具体操作如图-7所示。

2. 设置Windows注册表（不修改注册表，连接VPN默认会报789错误），具体操作如下：

单击"开始"，单击"运行"，键入"regedit"，然后单击"确定"
找到下面的注册表子项，然后单击它：
HKEY_LOCAL_MACHINE\ System\CurrentControlSet\Services\Rasman\Parameters
在"编辑"菜单上，单击"新建"->"DWORD值"
在"名称"框中，键入"ProhibitIpSec"
在"数值数据"框中，键入"1"，然后单击"确定"
退出注册表编辑器，然后重新启动计算机


##############################################################################
	案例4：NTP时间同步
部署一台NTP时间服务器
设置时间服务器上层与0.centos.pool.ntp.org同步
设置本地服务器层级数量为10
允许192.168.4.0/24网络的主机同步时间
客户端验证时间是否同步

Network Time Protocol（网络时间协议）采用的是分层设计，如图-9所示，Stratum层的总数限制在15以内（包括15）。

     部署NTP服务
安装软件包
yum -y install chrony
rpm -qc chrony                              //查看配置文件列表

修改配置文件
 /etc/chrony.conf
iburst                                      //尽快同步 不加闲时同步 建议加
server 0.centos.pool.ntp.org iburst         //server用户客户端指向上层NTP服务器
allow 192.168.4.0/24 (允许4.0网段访问)      //允许那个IP或网络访问NTP
#deny  192.168.4.1                          //拒绝那个IP或网络访问NTP
local stratum 10                            //设置NTP服务器的层数量

启动NTP服务
systemctl  restart  chronyd
 systemctl  enable  chronyd

设置防火墙

    配置客户端
安装软件包
修改配置文件
server 192.168.4.5 iburst                //设置与哪台服务器同步数据
                                        //iburst参数设置重启服务后尽快同步时间

将客户端时间修改为错误的时间
date  -s  "hour:minute"         //调整时间（小时：分钟）
 date                            //查看修改后的时间

重启chrony与服务器同步时间
确认时间是否已经同步

闰秒(58 59 60 00秒)  时提前关闭时间服务器 不然容易死机

















